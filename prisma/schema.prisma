// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  username   String    @unique
  password String
  birthDate  DateTime?          
  tasks    Task[]
  lists    List[]
  tags     Tag[]

  @@map("users")
}

model Task {
  id            Int       @id @default(autoincrement())
  title         String
  status        Boolean
  dueDate       DateTime  @default(now()) @db.Date
  completedDate DateTime? @db.Date
  description   String?
  userId        Int
  listId        Int?
  tags          Tag[]
  user          Usuario   @relation(fields: [userId], references: [id], onDelete: Cascade)
  list          List?     @relation(fields: [listId], references: [id])

  @@map("tasks")
}

model List {
  id     Int     @id @default(autoincrement())
  name   String?
  userId Int
  user   Usuario @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks  Task[]
  color  String? @default("#7E7E7E")

  @@map("lists")
}

model Tag {
  id     Int     @id @default(autoincrement())
  name   String?
  tasks  Task[]
  user   Usuario @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  @@map("tags")
}
